// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
function getLocationDescription(lat, lng) {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∑–æ–Ω—ã
    
    // –û–∫–µ–∞–Ω—ã
    if (lat > -60 && lat < 60) {
        if (lng > -180 && lng < -30) {
            if (lat > 0) return "–°–µ–≤–µ—Ä–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞";
            return "–Æ–∂–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞";
        } else if (lng >= -30 && lng < 60) {
            if (lat > 30) return "–ï–≤—Ä–æ–ø–∞/–°—Ä–µ–¥–∏–∑–µ–º–Ω–æ–º–æ—Ä—å–µ";
            if (lat > 0) return "–ê—Ñ—Ä–∏–∫–∞/–°—Ä–µ–¥–Ω–∏–π –í–æ—Å—Ç–æ–∫";
            return "–Æ–∂–Ω–∞—è –ê—Ñ—Ä–∏–∫–∞";
        } else if (lng >= 60 && lng < 150) {
            if (lat > 30) return "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –ê–∑–∏—è";
            if (lat > 0) return "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω/–Æ–≥–æ-–í–æ—Å—Ç–æ—á–Ω–∞—è –ê–∑–∏—è";
            return "–ò–Ω–¥–∏–π—Å–∫–∏–π –æ–∫–µ–∞–Ω";
        } else {
            if (lat > 0) return "–°–µ–≤–µ—Ä–Ω–∞—è —á–∞—Å—Ç—å –¢–∏—Ö–æ–≥–æ –æ–∫–µ–∞–Ω–∞";
            return "–Æ–∂–Ω–∞—è —á–∞—Å—Ç—å –¢–∏—Ö–æ–≥–æ –æ–∫–µ–∞–Ω–∞";
        }
    }
    
    // –ü–æ–ª—è—Ä–Ω—ã–µ —Ä–µ–≥–∏–æ–Ω—ã
    if (lat >= 60) return "–ê—Ä–∫—Ç–∏–∫–∞/–°–µ–≤–µ—Ä";
    if (lat <= -60) return "–ê–Ω—Ç–∞—Ä–∫—Ç–∏–¥–∞";
    
    return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–≥–∏–æ–Ω";
}

// –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏
function startSimulation() {
    if (isSimulationRunning) return;
    
    // –ü–†–û–í–ï–†–ö–ê: —É–±–µ–¥–∏–º—Å—è —á—Ç–æ –∞—Å—Ç–µ—Ä–æ–∏–¥ —Å–æ–∑–¥–∞–Ω
    if (!asteroid) {
        console.error('–û–®–ò–ë–ö–ê: –ê—Å—Ç–µ—Ä–æ–∏–¥ –Ω–µ —Å–æ–∑–¥–∞–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–±–æ—Ä –∞—Å—Ç–µ—Ä–æ–∏–¥–∞.');
        alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∞—Å—Ç–µ—Ä–æ–∏–¥ –∏–∑ —Å–ø–∏—Å–∫–∞!');
        return;
    }
    
    if (!impactLocation || !impactLocation.lat) {
        console.error('–û–®–ò–ë–ö–ê: –ú–µ—Å—Ç–æ –ø–∞–¥–µ–Ω–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–æ!');
        alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ –ø–∞–¥–µ–Ω–∏—è –Ω–∞ –∫–∞—Ä—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã!');
        return;
    }
    
    console.log('‚úÖ –ó–∞–ø—É—Å–∫ —Å–∏–º—É–ª—è—Ü–∏–∏ —Å –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–º:', asteroid);
    
    isSimulationRunning = true;
    document.getElementById('start-simulation').disabled = true;

    // –†–∞—Å—á–µ—Ç —ç–Ω–µ—Ä–≥–∏–∏ —É–¥–∞—Ä–∞ (–ë–ï–ó –ø–æ–∫–∞–∑–∞ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π)
    calculateImpact();

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–∞–¥–µ–Ω–∏—è
    animateImpact();
}

// –†–∞—Å—á–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —É–¥–∞—Ä–∞
function calculateImpact() {
    const diameter = (
        selectedAsteroid.estimated_diameter.meters.estimated_diameter_min +
        selectedAsteroid.estimated_diameter.meters.estimated_diameter_max
    ) / 2;

    const velocity = selectedAsteroid.close_approach_data && selectedAsteroid.close_approach_data[0]
        ? parseFloat(selectedAsteroid.close_approach_data[0].relative_velocity.kilometers_per_second)
        : 20;

    const mass = (4/3) * Math.PI * Math.pow(diameter/2, 3) * 2500; // –ø–ª–æ—Ç–Ω–æ—Å—Ç—å ~2500 –∫–≥/–º¬≥
    const kineticEnergy = 0.5 * mass * Math.pow(velocity * 1000, 2); // –î–∂–æ—É–ª–∏
    const megatons = kineticEnergy / (4.184 * 10**15); // –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –º–µ–≥–∞—Ç–æ–Ω–Ω—ã TNT
    const craterDiameter = 1.8 * Math.pow(diameter, 0.78) * Math.pow(velocity, 0.44);

    const impactInfo = document.getElementById('impact-info');
    const impactDetails = document.getElementById('impact-details');
    
    impactDetails.innerHTML = `
        <div class="detail-row">
            <span class="detail-label">–ú–∞—Å—Å–∞:</span>
            <span class="detail-value">${(mass / 1000000).toFixed(2)} —Ç–æ–Ω–Ω</span>
        </div>
        <div class="detail-row">
            <span class="detail-label">–≠–Ω–µ—Ä–≥–∏—è —É–¥–∞—Ä–∞:</span>
            <span class="detail-value">${megatons.toFixed(2)} –º–µ–≥–∞—Ç–æ–Ω–Ω TNT</span>
        </div>
        <div class="detail-row">
            <span class="detail-label">–î–∏–∞–º–µ—Ç—Ä –∫—Ä–∞—Ç–µ—Ä–∞:</span>
            <span class="detail-value">${craterDiameter.toFixed(0)} –º</span>
        </div>
        <div class="detail-row">
            <span class="detail-label">–†–∞–¥–∏—É—Å —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è:</span>
            <span class="detail-value">${(craterDiameter * 2).toFixed(0)} –º</span>
        </div>
    `;

    impactInfo.style.display = 'block';
    
    // –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∑–¥–µ—Å—å - —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É–¥–∞—Ä–∞!
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–æ—Å–ª–µ —É–¥–∞—Ä–∞
    window.impactCalculations = {
        diameter,
        velocity,
        mass,
        kineticEnergy,
        megatons,
        craterDiameter
    };
}

// –†–∞—Å—á–µ—Ç –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –ø–∞–¥–µ–Ω–∏—è –∞—Å—Ç–µ—Ä–æ–∏–¥–∞
function calculateConsequences(diameter, velocity, mass, kineticEnergy, megatons, craterDiameter) {
    // –†–∞–¥–∏—É—Å—ã —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–æ–Ω –ø–æ—Ä–∞–∂–µ–Ω–∏—è (–≤ –∫–º)
    const fireball = Math.pow(megatons, 0.4) * 0.2; // –û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä
    const radiationRadius = Math.pow(megatons, 0.33) * 2; // –¢–µ—Ä–º–∏—á–µ—Å–∫–æ–µ –∏–∑–ª—É—á–µ–Ω–∏–µ (3-—è —Å—Ç–µ–ø–µ–Ω—å –æ–∂–æ–≥–æ–≤)
    const shockwaveRadius = Math.pow(megatons, 0.33) * 5; // –£–¥–∞—Ä–Ω–∞—è –≤–æ–ª–Ω–∞ (—Ä–∞–∑—Ä—É—à–µ–Ω–∏–µ –∑–¥–∞–Ω–∏–π)
    const earthquakeRadius = Math.pow(megatons, 0.5) * 10; // –°–µ–π—Å–º–∏—á–µ—Å–∫–∞—è –≤–æ–ª–Ω–∞
    
    // –û—Ü–µ–Ω–∫–∞ –∂–µ—Ä—Ç–≤ (–≥—Ä—É–±–∞—è)
    const populationDensity = 100; // —Å—Ä–µ–¥–Ω—è—è –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –Ω–∞—Å–µ–ª–µ–Ω–∏—è —á–µ–ª/–∫–º¬≤
    const affectedArea = Math.PI * Math.pow(shockwaveRadius, 2);
    const estimatedCasualties = Math.floor(affectedArea * populationDensity);
    
    // –ì–ª—É–±–∏–Ω–∞ –∫—Ä–∞—Ç–µ—Ä–∞ (–æ–±—ã—á–Ω–æ 1/5 –æ—Ç –¥–∏–∞–º–µ—Ç—Ä–∞)
    const craterDepth = craterDiameter / 5;
    
    // –û–±—ä–µ–º –≤—ã–±—Ä–æ—à–µ–Ω–Ω–æ–π –ø–æ—Ä–æ–¥—ã
    const ejectaVolume = Math.PI * Math.pow(craterDiameter / 2, 2) * craterDepth;
    
    // –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏
    let comparison = '';
    if (megatons < 0.01) {
        comparison = '–ú–µ–Ω—å—à–µ –±–æ–º–±—ã –•–∏—Ä–æ—Å–∏–º—ã';
    } else if (megatons < 1) {
        comparison = '–°—Ä–∞–≤–Ω–∏–º–æ —Å —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–º —è–¥–µ—Ä–Ω—ã–º –æ—Ä—É–∂–∏–µ–º';
    } else if (megatons < 50) {
        comparison = `–í ${(megatons / 0.015).toFixed(0)} —Ä–∞–∑ –º–æ—â–Ω–µ–µ –±–æ–º–±—ã –•–∏—Ä–æ—Å–∏–º—ã`;
    } else if (megatons < 1000) {
        comparison = '–°—Ä–∞–≤–Ω–∏–º–æ —Å –∫—Ä—É–ø–Ω–µ–π—à–∏–º–∏ —è–¥–µ—Ä–Ω—ã–º–∏ –±–æ–º–±–∞–º–∏';
    } else {
        comparison = '–ö–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞ –ø–ª–∞–Ω–µ—Ç–∞—Ä–Ω–æ–≥–æ –º–∞—Å—à—Ç–∞–±–∞';
    }
    
    // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —ç–ø–∏—Ü–µ–Ω—Ç—Ä–µ
    const temperatureKelvin = Math.pow(megatons, 0.25) * 5000;
    
    const consequencesPanel = document.getElementById('impact-consequences');
    const consequencesData = document.getElementById('consequences-data');
    
    consequencesData.innerHTML = `
        <div class="detail-row" style="margin-bottom: 15px; padding-bottom: 15px; border-bottom: 1px solid rgba(255,255,255,0.2);">
            <strong style="color: #ff6b6b; font-size: 1.1em;">‚ö†Ô∏è ${comparison}</strong>
        </div>
        
        <div class="detail-row" style="margin-bottom: 10px; padding: 10px; background: rgba(100,150,255,0.2); border-radius: 6px;">
            <div style="width: 100%;">
                <strong style="color: #6bb6ff;">üìç –¢–û–ß–ö–ê –£–î–ê–†–ê:</strong><br>
                <span style="color: #fff;">–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: ${impactLocation.lat.toFixed(6)}¬∞, ${impactLocation.lng.toFixed(6)}¬∞</span><br>
                <span style="color: #fff;">–†–µ–≥–∏–æ–Ω: ${getLocationDescription(impactLocation.lat, impactLocation.lng)}</span>
            </div>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üî• –î–∏–∞–º–µ—Ç—Ä –æ–≥–Ω–µ–Ω–Ω–æ–≥–æ —à–∞—Ä–∞:</span>
            <span class="detail-value">${fireball.toFixed(2)} –∫–º</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üï≥Ô∏è –î–∏–∞–º–µ—Ç—Ä –∫—Ä–∞—Ç–µ—Ä–∞:</span>
            <span class="detail-value">${(craterDiameter / 1000).toFixed(2)} –∫–º (${craterDiameter.toFixed(0)} –º)</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üìè –ì–ª—É–±–∏–Ω–∞ –∫—Ä–∞—Ç–µ—Ä–∞:</span>
            <span class="detail-value">${(craterDepth / 1000).toFixed(2)} –∫–º (${craterDepth.toFixed(0)} –º)</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üí• –û–±—ä–µ–º –≤—ã–±—Ä–æ—à–µ–Ω–Ω–æ–π –ø–æ—Ä–æ–¥—ã:</span>
            <span class="detail-value">${(ejectaVolume / 1e9).toFixed(2)} –∫–º¬≥</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤ —ç–ø–∏—Ü–µ–Ω—Ç—Ä–µ:</span>
            <span class="detail-value">${temperatureKelvin.toFixed(0)} K (${(temperatureKelvin - 273).toFixed(0)}¬∞C)</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">‚ò¢Ô∏è –†–∞–¥–∏—É—Å —Ç–µ—Ä–º–∏—á–µ—Å–∫–∏—Ö –æ–∂–æ–≥–æ–≤:</span>
            <span class="detail-value">${radiationRadius.toFixed(2)} –∫–º</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üí® –†–∞–¥–∏—É—Å —É–¥–∞—Ä–Ω–æ–π –≤–æ–ª–Ω—ã:</span>
            <span class="detail-value">${shockwaveRadius.toFixed(2)} –∫–º</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üåç –†–∞–¥–∏—É—Å —Å–µ–π—Å–º–∏—á–µ—Å–∫–æ–π –≤–æ–ª–Ω—ã:</span>
            <span class="detail-value">${earthquakeRadius.toFixed(2)} –∫–º</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üìä –ü–ª–æ—â–∞–¥—å –ø–æ—Ä–∞–∂–µ–Ω–∏—è:</span>
            <span class="detail-value">${affectedArea.toFixed(0)} –∫–º¬≤</span>
        </div>
        
        <div class="detail-row" style="margin-top: 15px; padding-top: 15px; border-top: 1px solid rgba(255,255,255,0.2);">
            <span class="detail-label" style="color: #ff6b6b;">‚ò†Ô∏è –û—Ü–µ–Ω–∫–∞ –∂–µ—Ä—Ç–≤ (–ø—Ä–∏ —Å—Ä–µ–¥–Ω–µ–π –ø–ª–æ—Ç–Ω–æ—Å—Ç–∏):</span>
            <span class="detail-value" style="color: #ff6b6b; font-weight: bold;">${estimatedCasualties.toLocaleString()} —á–µ–ª–æ–≤–µ–∫</span>
        </div>
        
        <div style="margin-top: 15px; padding: 10px; background: rgba(255,100,100,0.2); border-radius: 6px; border-left: 3px solid #ff6b6b;">
            <strong>‚ö†Ô∏è –î–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è:</strong><br>
            ${megatons > 1000 ? '‚Ä¢ –ú–∞—Å—Å–æ–≤–æ–µ –≤—ã–º–∏—Ä–∞–Ω–∏–µ<br>‚Ä¢ –Ø–¥–µ—Ä–Ω–∞—è –∑–∏–º–∞ –Ω–∞ –≥–æ–¥—ã<br>‚Ä¢ –†–∞–∑—Ä—É—à–µ–Ω–∏–µ –æ–∑–æ–Ω–æ–≤–æ–≥–æ —Å–ª–æ—è' : 
              megatons > 100 ? '‚Ä¢ –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–∞<br>‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª–∏–º–∞—Ç–∞ –Ω–∞ –º–µ—Å—è—Ü—ã<br>‚Ä¢ –¶—É–Ω–∞–º–∏ (–µ—Å–ª–∏ –≤ –æ–∫–µ–∞–Ω)' :
              megatons > 10 ? '‚Ä¢ –†–∞–∑—Ä—É—à–µ–Ω–∏–µ –≥–æ—Ä–æ–¥–∞<br>‚Ä¢ –õ–µ—Å–Ω—ã–µ –ø–æ–∂–∞—Ä—ã<br>‚Ä¢ –í—ã–±—Ä–æ—Å –ø—ã–ª–∏ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É' :
              '‚Ä¢ –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ä–∞–∑—Ä—É—à–µ–Ω–∏—è<br>‚Ä¢ –í—Ä–µ–º–µ–Ω–Ω–æ–µ –ø–æ–º—É—Ç–Ω–µ–Ω–∏–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã'}
        </div>
    `;
    
    consequencesPanel.style.display = 'block';
    
    // –í—ã–∑—ã–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ –¥–ª—è NASA Space Apps Challenge
    compareWithHistory(diameter, velocity, megatons);
    calculatePlanetaryDefense(diameter, velocity, megatons);
    
    console.log('=== –ü–û–°–õ–ï–î–°–¢–í–ò–Ø –ü–ê–î–ï–ù–ò–Ø ===');
    console.log('–≠–Ω–µ—Ä–≥–∏—è –≤–∑—Ä—ã–≤–∞:', megatons.toFixed(2), '–º–µ–≥–∞—Ç–æ–Ω–Ω');
    console.log('–î–∏–∞–º–µ—Ç—Ä –∫—Ä–∞—Ç–µ—Ä–∞:', (craterDiameter / 1000).toFixed(2), '–∫–º');
    console.log('–†–∞–¥–∏—É—Å –ø–æ—Ä–∞–∂–µ–Ω–∏—è:', shockwaveRadius.toFixed(2), '–∫–º');
}

// –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏
function compareWithHistory(diameter, velocity, megatons) {
    const historicalPanel = document.getElementById('historical-comparison');
    const historicalData = document.getElementById('historical-data');
    
    let historicalEvent = '';
    let comparison = '';
    let description = '';
    
    if (megatons < 0.001) {
        historicalEvent = 'üèòÔ∏è –ú–µ—Ç–µ–æ—Ä–∏—Ç –ü–∏–∫—Å–∫–∏–ª–ª (1992)';
        comparison = '–û—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π –º–µ—Ç–µ–æ—Ä–∏—Ç';
        description = '–£–ø–∞–ª –≤ –°–®–ê, –ø—Ä–æ–±–∏–ª –∞–≤—Ç–æ–º–æ–±–∏–ª—å. –î–∏–∞–º–µ—Ç—Ä ~10 —Å–º. –ù–∏–∫—Ç–æ –Ω–µ –ø–æ—Å—Ç—Ä–∞–¥–∞–ª.';
    } else if (megatons < 0.5) {
        historicalEvent = 'üí• –ß–µ–ª—è–±–∏–Ω—Å–∫–∏–π –º–µ—Ç–µ–æ—Ä–∏—Ç (2013)';
        comparison = `–í ${(megatons / 0.5).toFixed(1)} —Ä–∞–∑ ${megatons < 0.5 ? '—Å–ª–∞–±–µ–µ' : '–º–æ—â–Ω–µ–µ'}`;
        description = '–î–∏–∞–º–µ—Ç—Ä ~20–º, –≤–∑–æ—Ä–≤–∞–ª—Å—è –Ω–∞–¥ –†–æ—Å—Å–∏–µ–π. –£–¥–∞—Ä–Ω–∞—è –≤–æ–ª–Ω–∞ –ø–æ–≤—Ä–µ–¥–∏–ª–∞ 7200 –∑–¥–∞–Ω–∏–π, ~1500 —Ä–∞–Ω–µ–Ω—ã—Ö.';
    } else if (megatons < 15) {
        historicalEvent = 'üå≤ –¢—É–Ω–≥—É—Å—Å–∫–∏–π –º–µ—Ç–µ–æ—Ä–∏—Ç (1908)';
        comparison = `–í ${(megatons / 15).toFixed(1)} —Ä–∞–∑ ${megatons < 15 ? '—Å–ª–∞–±–µ–µ' : '–º–æ—â–Ω–µ–µ'}`;
        description = '–î–∏–∞–º–µ—Ç—Ä ~60-100–º, –≤–∑–æ—Ä–≤–∞–ª—Å—è –Ω–∞–¥ –°–∏–±–∏—Ä—å—é. –ü–æ–≤–∞–ª–∏–ª 80 –º–ª–Ω –¥–µ—Ä–µ–≤—å–µ–≤ –Ω–∞ –ø–ª–æ—â–∞–¥–∏ 2150 –∫–º¬≤.';
    } else if (megatons < 50) {
        historicalEvent = '‚ò¢Ô∏è –¶–∞—Ä—å-–±–æ–º–±–∞ (1961)';
        comparison = `–í ${(megatons / 50).toFixed(1)} —Ä–∞–∑ ${megatons < 50 ? '—Å–ª–∞–±–µ–µ' : '–º–æ—â–Ω–µ–µ'}`;
        description = '–ö—Ä—É–ø–Ω–µ–π—à–µ–µ —è–¥–µ—Ä–Ω–æ–µ –∏—Å–ø—ã—Ç–∞–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏–∏ (–°–°–°–†). –ú–æ—â–Ω–æ—Å—Ç—å 50 –º–µ–≥–∞—Ç–æ–Ω–Ω.';
    } else if (megatons < 10000) {
        historicalEvent = 'üï≥Ô∏è –ö—Ä–∞—Ç–µ—Ä –ë–∞—Ä—Ä–∏–Ω–¥–∂–µ—Ä–∞ (50000 –ª–µ—Ç –Ω–∞–∑–∞–¥)';
        comparison = `–°–æ–ø–æ—Å—Ç–∞–≤–∏–º–æ —Å –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ–æ–π`;
        description = '–î–∏–∞–º–µ—Ç—Ä –∞—Å—Ç–µ—Ä–æ–∏–¥–∞ ~50–º, –∫—Ä–∞—Ç–µ—Ä 1.2–∫–º –≤ –ê—Ä–∏–∑–æ–Ω–µ. –≠–Ω–µ—Ä–≥–∏—è ~10 –º–µ–≥–∞—Ç–æ–Ω–Ω.';
    } else {
        historicalEvent = 'ü¶ñ –ß–∏–∫—Å—É–ª—É–±—Å–∫–∏–π –∏–º–ø–∞–∫—Ç–æ—Ä (66 –º–ª–Ω –ª–µ—Ç –Ω–∞–∑–∞–¥)';
        comparison = '–ö–ê–¢–ê–°–¢–†–û–§–ê –ü–õ–ê–ù–ï–¢–ê–†–ù–û–ì–û –ú–ê–°–®–¢–ê–ë–ê';
        description = '–î–∏–∞–º–µ—Ç—Ä ~10–∫–º, –∫—Ä–∞—Ç–µ—Ä 180–∫–º –≤ –ú–µ–∫—Å–∏–∫–µ. –£–Ω–∏—á—Ç–æ–∂–∏–ª –¥–∏–Ω–æ–∑–∞–≤—Ä–æ–≤. –≠–Ω–µ—Ä–≥–∏—è ~100 –º–ª–Ω –º–µ–≥–∞—Ç–æ–Ω–Ω.';
    }
    
    historicalData.innerHTML = `
        <div style="margin-bottom: 15px; padding: 15px; background: rgba(255,255,255,0.05); border-radius: 8px;">
            <h3 style="color: #ff6b35; margin-bottom: 10px;">${historicalEvent}</h3>
            <p style="color: #aaa; font-size: 14px; line-height: 1.6;">${description}</p>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ:</span>
            <span class="detail-value">${comparison}</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üí• –í–∞—à –∞—Å—Ç–µ—Ä–æ–∏–¥:</span>
            <span class="detail-value">${megatons.toFixed(2)} –º–µ–≥–∞—Ç–æ–Ω–Ω</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üìè –î–∏–∞–º–µ—Ç—Ä –∞—Å—Ç–µ—Ä–æ–∏–¥–∞:</span>
            <span class="detail-value">${diameter.toFixed(1)} –º</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">‚ö° –°–∫–æ—Ä–æ—Å—Ç—å —É–¥–∞—Ä–∞:</span>
            <span class="detail-value">${velocity.toFixed(1)} –∫–º/—Å</span>
        </div>
        
        ${megatons < 0.5 ? `
            <div style="margin-top: 15px; padding: 10px; background: rgba(50,255,100,0.1); border-radius: 6px; border-left: 3px solid #32ff64;">
                <strong>‚úÖ –ù–∏–∑–∫–∞—è –æ–ø–∞—Å–Ω–æ—Å—Ç—å</strong><br>
                –ü–æ–¥–æ–±–Ω—ã–µ –º–µ—Ç–µ–æ—Ä–∏—Ç—ã –ø–∞–¥–∞—é—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –≤ –≥–æ–¥.
            </div>
        ` : megatons < 15 ? `
            <div style="margin-top: 15px; padding: 10px; background: rgba(255,200,50,0.1); border-radius: 6px; border-left: 3px solid #ffc832;">
                <strong>‚ö†Ô∏è –°—Ä–µ–¥–Ω—è—è –æ–ø–∞—Å–Ω–æ—Å—Ç—å</strong><br>
                –ü–æ–¥–æ–±–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Ä–∞–∑ –≤ 100-1000 –ª–µ—Ç.
            </div>
        ` : `
            <div style="margin-top: 15px; padding: 10px; background: rgba(255,50,50,0.2); border-radius: 6px; border-left: 3px solid #ff3232;">
                <strong>üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–ü–ê–°–ù–û–°–¢–¨</strong><br>
                –ü–æ–¥–æ–±–Ω—ã–µ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—ã –ø—Ä–æ–∏—Å—Ö–æ–¥—è—Ç —Ä–∞–∑ –≤ ${megatons > 10000 ? '–º–∏–ª–ª–∏–æ–Ω—ã' : '—Ç—ã—Å—è—á–∏'} –ª–µ—Ç!
            </div>
        `}
    `;
    
    historicalPanel.style.display = 'block';
}

// –†–∞—Å—á–µ—Ç –ø–ª–∞–Ω–µ—Ç–∞—Ä–Ω–æ–π –∑–∞—â–∏—Ç—ã
function calculatePlanetaryDefense(diameter, velocity, megatons) {
    const defensePanel = document.getElementById('planetary-defense');
    const defenseData = document.getElementById('defense-data');
    
    // –í—Ä–µ–º—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è
    const detectionTime = diameter > 100 ? '10+ –ª–µ—Ç' : diameter > 50 ? '5-10 –ª–µ—Ç' : diameter > 20 ? '1-5 –ª–µ—Ç' : '–Ω–µ–¥–µ–ª–∏-–º–µ—Å—è—Ü—ã';
    
    // –ú–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã
    let defenseMethod = '';
    let feasibility = '';
    
    if (megatons < 1) {
        defenseMethod = 'üí® –ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω—ã–π —Ä–∞—Å–ø–∞–¥';
        feasibility = '–ù–µ–±–æ–ª—å—à–∏–µ –∞—Å—Ç–µ—Ä–æ–∏–¥—ã –æ–±—ã—á–Ω–æ —Å–≥–æ—Ä–∞—é—Ç –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ. –ó–∞—â–∏—Ç–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.';
    } else if (megatons < 100) {
        defenseMethod = 'üöÄ –ö–∏–Ω–µ—Ç–∏—á–µ—Å–∫–∏–π –∏–º–ø–∞–∫—Ç–æ—Ä';
        feasibility = '–ó–∞–ø—É—Å–∫ –∫–æ—Å–º–∏—á–µ—Å–∫–æ–≥–æ –∞–ø–ø–∞—Ä–∞—Ç–∞ –¥–ª—è —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è —Å –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–º –∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ–≥–æ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏. –¢—Ä–µ–±—É–µ—Ç—Å—è 5-10 –ª–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –ú–∏—Å—Å–∏—è DART (NASA, 2022) —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—ã—Ç–∞–ª–∞ —ç—Ç–æ—Ç –º–µ—Ç–æ–¥!';
    } else if (megatons < 10000) {
        defenseMethod = '‚ò¢Ô∏è –Ø–¥–µ—Ä–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ';
        feasibility = '–í–∑—Ä—ã–≤ —è–¥–µ—Ä–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ —Ä—è–¥–æ–º —Å –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–º –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏. –¢—Ä–µ–±—É–µ—Ç—Å—è 10+ –ª–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏. –û—á–µ–Ω—å —Ä–∏—Å–∫–æ–≤–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥.';
    } else {
        defenseMethod = 'üèÉ –≠–≤–∞–∫—É–∞—Ü–∏—è –Ω–∞—Å–µ–ª–µ–Ω–∏—è';
        feasibility = '–ê—Å—Ç–µ—Ä–æ–∏–¥ —Å–ª–∏—à–∫–æ–º –≤–µ–ª–∏–∫ –¥–ª—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è. –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - –º–∞—Å—Å–æ–≤–∞—è —ç–≤–∞–∫—É–∞—Ü–∏—è –∏–∑ –∑–æ–Ω—ã –ø–æ—Ä–∞–∂–µ–Ω–∏—è.';
    }
    
    // –í—Ä–µ–º—è –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É
    const timeNeeded = megatons < 1 ? '–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è' : 
                       megatons < 100 ? '5-10 –ª–µ—Ç' : 
                       megatons < 10000 ? '10-20 –ª–µ—Ç' : '20+ –ª–µ—Ç';
    
    // –°—Ç–æ–∏–º–æ—Å—Ç—å –º–∏—Å—Å–∏–∏
    const costEstimate = megatons < 1 ? 'N/A' :
                        megatons < 100 ? '$500 –º–ª–Ω - $2 –º–ª—Ä–¥' :
                        megatons < 10000 ? '$5-20 –º–ª—Ä–¥' : '$50+ –º–ª—Ä–¥';
    
    defenseData.innerHTML = `
        <div style="margin-bottom: 15px; padding: 15px; background: rgba(255,255,255,0.05); border-radius: 8px;">
            <h3 style="color: #32ff64; margin-bottom: 10px;">${defenseMethod}</h3>
            <p style="color: #aaa; font-size: 14px; line-height: 1.6;">${feasibility}</p>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üî≠ –í—Ä–µ–º—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è:</span>
            <span class="detail-value">${detectionTime}</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">‚è∞ –í—Ä–µ–º—è –Ω–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É:</span>
            <span class="detail-value">${timeNeeded}</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å –º–∏—Å—Å–∏–∏:</span>
            <span class="detail-value">${costEstimate}</span>
        </div>
        
        <div class="detail-row">
            <span class="detail-label">üéØ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞:</span>
            <span class="detail-value">${megatons < 1 ? '100%' : megatons < 100 ? '70-90%' : megatons < 10000 ? '30-60%' : '<10%'}</span>
        </div>
        
        <div style="margin-top: 15px; padding: 12px; background: rgba(100,150,255,0.1); border-radius: 6px; border-left: 3px solid #6496ff;">
            <strong>üõ∞Ô∏è –ü—Ä–æ–≥—Ä–∞–º–º—ã NASA:</strong><br>
            <div style="font-size: 13px; color: #aaa; margin-top: 8px; line-height: 1.8;">
                ‚Ä¢ <strong>DART</strong> - –£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∞ –æ—Ä–±–∏—Ç—É –∞—Å—Ç–µ—Ä–æ–∏–¥–∞ (2022)<br>
                ‚Ä¢ <strong>NEO Surveyor</strong> - –¢–µ–ª–µ—Å–∫–æ–ø –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤ (–∑–∞–ø—É—Å–∫ 2027)<br>
                ‚Ä¢ <strong>Planetary Defense Office</strong> - –ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –∑–∞—â–∏—Ç—ã –ó–µ–º–ª–∏<br>
                ‚Ä¢ <strong>NEOWs API</strong> - –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –æ–ø–∞—Å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
            </div>
        </div>
        
        <div style="margin-top: 15px; padding: 12px; background: rgba(255,200,50,0.1); border-radius: 6px; border-left: 3px solid #ffc832;">
            <strong>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ NASA:</strong><br>
            <div style="font-size: 13px; color: #aaa; margin-top: 8px; line-height: 1.8;">
                ‚Ä¢ –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ >30,000 –æ–∫–æ–ª–æ–∑–µ–º–Ω—ã—Ö –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–≤<br>
                ‚Ä¢ ~150 –Ω–æ–≤—ã—Ö –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü<br>
                ‚Ä¢ ~2,300 –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –æ–ø–∞—Å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤<br>
                ‚Ä¢ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∫—Ä—É–ø–Ω–æ–≥–æ —É–¥–∞—Ä–∞: 1 —Ä–∞–∑ –≤ 100,000 –ª–µ—Ç
            </div>
        </div>
    `;
    
    defensePanel.style.display = 'block';
}

// –ê–Ω–∏–º–∞—Ü–∏—è —É–¥–∞—Ä–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
function animateImpact() {
    const startPos = asteroid.position.clone();
    
    // 100% –¢–û–ß–ù–û–ï –ü–û–ü–ê–î–ê–ù–ò–ï: –í—ã—á–∏—Å–ª—è–µ–º endPos –ù–ê–ü–†–Ø–ú–£–Æ –∏–∑ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç lat/lng
    const earthRadius = 10;
    const lat = impactLocation.lat;
    const lng = impactLocation.lng;
    
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤ —Ä–∞–¥–∏–∞–Ω—ã
    const latRad = lat * (Math.PI / 180);
    const lngRad = lng * (Math.PI / 180);
    
    // –ü–†–Ø–ú–û–ï –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –∏–∑ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç (–ë–ï–ó –≤—Ä–∞—â–µ–Ω–∏—è –ó–µ–º–ª–∏)
    const endPos = new THREE.Vector3(
        earthRadius * Math.cos(latRad) * Math.sin(lngRad),
        earthRadius * Math.sin(latRad),
        earthRadius * Math.cos(latRad) * Math.cos(lngRad)
    );
    
    console.log('=== –ù–ê–ß–ê–õ–û –°–ò–ú–£–õ–Ø–¶–ò–ò (100% –¢–û–ß–ù–û–°–¢–¨ - –ü–†–Ø–ú–û–ô –†–ê–°–ß–ï–¢) ===');
    console.log('–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É–¥–∞—Ä–∞:', lat.toFixed(6) + '¬∞', lng.toFixed(6) + '¬∞');
    console.log('–°—Ç–∞—Ä—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è –∞—Å—Ç–µ—Ä–æ–∏–¥–∞:', startPos);
    console.log('–¶–µ–ª–µ–≤–∞—è —Ç–æ—á–∫–∞ (–ø—Ä—è–º–æ–π —Ä–∞—Å—á–µ—Ç –∏–∑ lat/lng):', endPos);
    console.log('–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–ª–∏:', startPos.distanceTo(endPos).toFixed(2), '–µ–¥–∏–Ω–∏—Ü');
    
    const duration = 5000; // 5 —Å–µ–∫—É–Ω–¥
    const startTime = Date.now();

    // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ü–µ–ª–∏ (–∫—Ä–∞—Å–Ω–æ–µ –∫–æ–ª—å—Ü–æ –ù–ê –¢–û–ß–ö–ï –£–î–ê–†–ê)
    if (targetIndicator) {
        scene.remove(targetIndicator);
    }
    const ringGeometry = new THREE.RingGeometry(0.3, 0.5, 32);
    const ringMaterial = new THREE.MeshBasicMaterial({ 
        color: 0xff0000, 
        side: THREE.DoubleSide,
        transparent: true,
        opacity: 0.6
    });
    targetIndicator = new THREE.Mesh(ringGeometry, ringMaterial);
    targetIndicator.position.copy(endPos); // –£–°–¢–ê–ù–ê–í–õ–ò–í–ê–ï–ú –ù–ê –¢–û–ß–ö–£ –£–î–ê–†–ê
    targetIndicator.lookAt(new THREE.Vector3(0, 0, 0)); // –ù–∞–ø—Ä–∞–≤–ª—è–µ–º –∫ —Ü–µ–Ω—Ç—Ä—É –ó–µ–º–ª–∏
    scene.add(targetIndicator);
    
    console.log('‚úÖ –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ü–µ–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞:', endPos);

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞
    const diameter = (
        selectedAsteroid.estimated_diameter.meters.estimated_diameter_min +
        selectedAsteroid.estimated_diameter.meters.estimated_diameter_max
    ) / 2;
    
    const velocity = selectedAsteroid.close_approach_data && selectedAsteroid.close_approach_data[0]
        ? parseFloat(selectedAsteroid.close_approach_data[0].relative_velocity.kilometers_per_second)
        : 20;
    
    const craterDiameter = 1.8 * Math.pow(diameter, 0.78) * Math.pow(velocity, 0.44);
    const mass = (4/3) * Math.PI * Math.pow(diameter/2, 3) * 2500;
    const kineticEnergy = 0.5 * mass * Math.pow(velocity * 1000, 2);
    
    // –°–æ–∑–¥–∞–µ–º —Å–≤–µ—á–µ–Ω–∏–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –ø—Ä–∏ –≤—Ö–æ–¥–µ
    if (showFallVisualization) {
        createAtmosphericEntry();
    }

    // –≠–ª–µ–º–µ–Ω—Ç –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    const realtimeData = document.getElementById('realtime-data');
    const realtimeContent = document.createElement('div');
    realtimeContent.id = 'realtime-content-dynamic';
    
    if (realtimeData.querySelector('#realtime-content')) {
        realtimeData.querySelector('#realtime-content').innerHTML = '';
    }

    function updateImpact() {
        const elapsed = Date.now() - startTime;
        const progress = Math.min(elapsed / duration, 1);

        // –†–ï–ê–õ–ò–°–¢–ò–ß–ù–ê–Ø –§–ò–ó–ò–ö–ê: –ì—Ä–∞–≤–∏—Ç–∞—Ü–∏–æ–Ω–Ω–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ
        const easedProgress = progress * progress * (3 - 2 * progress); // Smooth hermite interpolation
        
        // –ì—Ä–∞–≤–∏—Ç–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–∫—Ç–æ—Ä
        const gravityFactor = 1 + (progress * progress * 0.5);

        // –¢–û–ß–ù–û–ï –î–í–ò–ñ–ï–ù–ò–ï –ö –¶–ï–õ–ò
        asteroid.position.lerpVectors(startPos, endPos, easedProgress);
        
        // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ –º–µ—Å—Ç–µ —É–¥–∞—Ä–∞, –ù–ï —Å–ª–µ–¥—É–µ—Ç –∑–∞ –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–º
        if (targetIndicator) {
            targetIndicator.rotation.y += 0.1; // –¢–æ–ª—å–∫–æ –≤—Ä–∞—â–µ–Ω–∏–µ
            // –ü—É–ª—å—Å–∞—Ü–∏—è –ø—Ä–∏ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–∏
            const scale = 1 + Math.sin(elapsed * 0.01) * 0.2;
            targetIndicator.scale.set(scale, scale, scale);
        }
        
        // –í—Ä–∞—â–µ–Ω–∏–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É
        const rotationSpeed = Math.min(velocity / 10, 0.2) * gravityFactor;
        asteroid.rotation.x += rotationSpeed;
        asteroid.rotation.y += rotationSpeed * 0.7;
        asteroid.rotation.z += rotationSpeed * 0.3;

        // –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï –í –†–ï–ê–õ–¨–ù–û–ú –í–†–ï–ú–ï–ù–ò (–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä)
        const distanceToImpact = asteroid.position.distanceTo(endPos);
        const currentSpeed = velocity * (1 + progress * 0.5); // –£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è –∏–∑-–∑–∞ –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–∏
        const timeToImpact = ((1 - progress) * duration / 1000).toFixed(1);
        
        // –†–µ–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –Ω–∞–¥ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—å—é (1 –µ–¥–∏–Ω–∏—Ü–∞ = ~637 –∫–º –≤ –º–∞—Å—à—Ç–∞–±–µ –ó–µ–º–ª–∏)
        const altitudeUnits = distanceToImpact - earthRadius;
        const altitudeKm = Math.max(0, altitudeUnits * 637.1); // –∫–º
        
        // –†–µ–∞–ª—å–Ω–∞—è –∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
        const currentKE = 0.5 * mass * Math.pow(currentSpeed * 1000, 2);
        const currentMegatons = currentKE / (4.184 * 10**15);
        
        // –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –æ—Ç —Ç—Ä–µ–Ω–∏—è –æ–± –∞—Ç–º–æ—Å—Ñ–µ—Ä—É (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –º–æ–¥–µ–ª—å)
        const atmosphereFactor = altitudeKm < 100 ? (100 - altitudeKm) / 100 : 0;
        const temperature = 20 + (atmosphereFactor * 1500); // –î–æ 1500¬∞C
        
        const realtimeContentDiv = realtimeData.querySelector('#realtime-content');
        if (realtimeContentDiv) {
            realtimeContentDiv.innerHTML = `
                <div class="realtime-row" style="background: rgba(255,107,53,0.1); padding: 8px; border-radius: 4px; margin-bottom: 8px;">
                    <span class="detail-label">‚è±Ô∏è –í—Ä–µ–º—è –¥–æ —É–¥–∞—Ä–∞:</span>
                    <span class="detail-value" style="color: ${timeToImpact < 2 ? '#ff0000' : '#ffaa00'}; font-weight: bold;">${timeToImpact} —Å–µ–∫</span>
                </div>
                <div class="realtime-row">
                    <span class="detail-label">üìè –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ —Ü–µ–ª–∏:</span>
                    <span class="detail-value">${distanceToImpact.toFixed(2)} –µ–¥ (${altitudeKm.toFixed(1)} –∫–º)</span>
                </div>
                <div class="realtime-row">
                    <span class="detail-label">üöÄ –¢–µ–∫—É—â–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å:</span>
                    <span class="detail-value">${currentSpeed.toFixed(2)} –∫–º/—Å (${(currentSpeed * 3600).toFixed(0)} –∫–º/—á)</span>
                </div>
                <div class="realtime-row">
                    <span class="detail-label">üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏:</span>
                    <span class="detail-value" style="color: ${temperature > 1000 ? '#ff4400' : '#ffaa00'};">${temperature.toFixed(0)}¬∞C</span>
                </div>
                <div class="realtime-row">
                    <span class="detail-label">‚ö° –ö–∏–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è:</span>
                    <span class="detail-value">${currentMegatons.toFixed(2)} –º–µ–≥–∞—Ç–æ–Ω–Ω TNT</span>
                </div>
                <div class="realtime-row">
                    <span class="detail-label">üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ü–µ–ª–∏:</span>
                    <span class="detail-value">${impactLocation.lat.toFixed(4)}¬∞, ${impactLocation.lng.toFixed(4)}¬∞</span>
                </div>
                <div class="realtime-row">
                    <span class="detail-label">üìä –ü—Ä–æ–≥—Ä–µ—Å—Å:</span>
                    <span class="detail-value">
                        <div style="background: rgba(255,255,255,0.1); height: 20px; border-radius: 10px; overflow: hidden; margin-top: 5px;">
                            <div style="background: linear-gradient(90deg, #ff6b35, #ff0000); height: 100%; width: ${(progress * 100).toFixed(1)}%; transition: width 0.1s;"></div>
                        </div>
                        ${(progress * 100).toFixed(1)}%
                    </span>
                </div>
            `;
        }
        
        realtimeData.style.display = 'block';

        // –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞–¥–µ–Ω–∏—è
        if (showFallVisualization) {
            // –°–ª–µ–¥ —Å –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å—é –∑–∞–≤–∏—Å—è—â–µ–π –æ—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏
            if (Math.random() > 0.5) {
                createEnhancedTrailParticle(asteroid.position.clone(), currentSpeed, progress);
            }
            
            // –ù–∞–≥—Ä–µ–≤ –ø—Ä–∏ –≤—Ö–æ–¥–µ –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 30% –ø—É—Ç–∏)
            if (progress > 0.7) {
                createAtmosphericHeating(asteroid.position.clone(), progress);
            }
            
            // –£–¥–∞—Ä–Ω–∞—è –≤–æ–ª–Ω–∞ –ø–µ—Ä–µ–¥ –∞—Å—Ç–µ—Ä–æ–∏–¥–æ–º
            if (progress > 0.85) {
                createShockwave(asteroid.position.clone(), endPos, progress);
            }
        } else {
            // –ü—Ä–æ—Å—Ç–æ–π —Å–ª–µ–¥
            if (Math.random() > 0.7) {
                createTrailParticle(asteroid.position.clone());
            }
        }

        if (progress < 1) {
            requestAnimationFrame(updateImpact);
        } else {
            // –í–∑—Ä—ã–≤ –ø—Ä–∏ —É–¥–∞—Ä–µ
            createRealisticExplosion(endPos, craterDiameter, kineticEnergy, velocity, diameter);
            scene.remove(asteroid);
            asteroid = null;
            
            if (targetIndicator) {
                scene.remove(targetIndicator);
                targetIndicator = null;
            }
            
            // –£–±—Ä–∞—Ç—å —Å–≤–µ—á–µ–Ω–∏–µ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã
            if (atmosphereGlow) {
                scene.remove(atmosphereGlow);
                atmosphereGlow = null;
            }

            // –§–∏–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            const realtimeContentDiv = realtimeData.querySelector('#realtime-content');
            if (realtimeContentDiv) {
                realtimeContentDiv.innerHTML = `
                    <div class="realtime-row" style="color: #ff0000; font-weight: bold; justify-content: center;">
                        <span>üí• –£–î–ê–† –ü–†–û–ò–ó–û–®–ï–õ!</span>
                    </div>
                    <div class="realtime-row" style="margin-top: 10px;">
                        <span class="realtime-label">üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É–¥–∞—Ä–∞:</span>
                        <span class="realtime-value">${impactLocation.lat.toFixed(6)}¬∞, ${impactLocation.lng.toFixed(6)}¬∞</span>
                    </div>
                    <div class="realtime-row">
                        <span class="realtime-label">üåç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ:</span>
                        <span class="realtime-value">${getLocationDescription(impactLocation.lat, impactLocation.lng)}</span>
                    </div>
                    <div class="realtime-row">
                        <span class="realtime-label">üìè –î–∏–∞–º–µ—Ç—Ä –∞—Å—Ç–µ—Ä–æ–∏–¥–∞:</span>
                        <span class="realtime-value">${diameter.toFixed(1)} –º</span>
                    </div>
                    <div class="realtime-row">
                        <span class="realtime-label">‚ö° –°–∫–æ—Ä–æ—Å—Ç—å —É–¥–∞—Ä–∞:</span>
                        <span class="realtime-value">${velocity.toFixed(2)} –∫–º/—Å</span>
                    </div>
                    <div class="realtime-row">
                        <span class="realtime-label">üï≥Ô∏è –î–∏–∞–º–µ—Ç—Ä –∫—Ä–∞—Ç–µ—Ä–∞:</span>
                        <span class="realtime-value">${(craterDiameter / 1000).toFixed(2)} –∫–º (${craterDiameter.toFixed(0)} –º)</span>
                    </div>
                    <div class="realtime-row">
                        <span class="realtime-label">üí• –≠–Ω–µ—Ä–≥–∏—è:</span>
                        <span class="realtime-value">${(kineticEnergy / (4.184 * Math.pow(10, 15))).toFixed(2)} –º–µ–≥–∞—Ç–æ–Ω–Ω –¢–ù–¢</span>
                    </div>
                `;
            }
            
            // –¢–ï–ü–ï–†–¨ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –ü–û–°–õ–ï —É–¥–∞—Ä–∞
            if (window.impactCalculations) {
                const calc = window.impactCalculations;
                calculateConsequences(calc.diameter, calc.velocity, calc.mass, calc.kineticEnergy, calc.megatons, calc.craterDiameter);
            }
            
            // –ü–†–û–í–ï–†–ö–ê –¢–û–ß–ù–û–°–¢–ò: –í—ã—á–∏—Å–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏–∑ endPos –æ–±—Ä–∞—Ç–Ω–æ
            const verifyLat = Math.asin(endPos.y / earthRadius) * (180 / Math.PI);
            const verifyLng = Math.atan2(endPos.x, endPos.z) * (180 / Math.PI);
            
            console.log('=== –ü–†–û–í–ï–†–ö–ê –¢–û–ß–ù–û–°–¢–ò –£–î–ê–†–ê ===');
            console.log('üéØ –ó–∞–¥–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:', impactLocation.lat.toFixed(6) + '¬∞', impactLocation.lng.toFixed(6) + '¬∞');
            console.log('üéØ –§–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —É–¥–∞—Ä–∞:', verifyLat.toFixed(6) + '¬∞', verifyLng.toFixed(6) + '¬∞');
            console.log('üìè –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø–æ —à–∏—Ä–æ—Ç–µ:', Math.abs(impactLocation.lat - verifyLat).toFixed(8) + '¬∞');
            console.log('üìè –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –ø–æ –¥–æ–ª–≥–æ—Ç–µ:', Math.abs(impactLocation.lng - verifyLng).toFixed(8) + '¬∞');
            console.log('‚úÖ –ü–æ–∑–∏—Ü–∏—è –∫—Ä–∞—Ç–µ—Ä–∞ –≤ 3D:', endPos);
            console.log('‚úÖ –ö–†–ê–¢–ï–† –°–û–ó–î–ê–ù –¢–û–ß–ù–û –ù–ê –í–´–ë–†–ê–ù–ù–´–• –ö–û–û–†–î–ò–ù–ê–¢–ê–•!');
        }
    }

    updateImpact();
}

// –°–±—Ä–æ—Å —Å–∏–º—É–ª—è—Ü–∏–∏
function resetSimulation() {
    isSimulationRunning = false;
    
    if (asteroid) {
        scene.remove(asteroid);
        asteroid = null;
    }

    if (targetIndicator) {
        scene.remove(targetIndicator);
        targetIndicator = null;
    }

    if (impactMarker) {
        earth.remove(impactMarker);
        impactMarker = null;
    }

    if (crater) {
        earth.remove(crater);
        crater = null;
    }

    particles.forEach(p => scene.remove(p.mesh));
    particles = [];
    explosionParticles.forEach(p => scene.remove(p.mesh));
    explosionParticles = [];

    selectedAsteroid = null;
    impactLocation = { lat: 0, lng: 0 };

    document.getElementById('asteroid-info').style.display = 'none';
    document.getElementById('impact-info').style.display = 'none';
    document.getElementById('realtime-data').style.display = 'none';
    document.getElementById('impact-consequences').style.display = 'none';
    document.getElementById('historical-comparison').style.display = 'none';
    document.getElementById('planetary-defense').style.display = 'none';
    document.getElementById('lat').textContent = '0¬∞';
    document.getElementById('lng').textContent = '0¬∞';
    document.getElementById('lat-input').value = '0';
    document.getElementById('lng-input').value = '0';
    document.getElementById('start-simulation').disabled = true;

    // –°–±—Ä–æ—Å–∏—Ç—å –º–∞—Ä–∫–µ—Ä –Ω–∞ –∫–∞—Ä—Ç–µ
    if (mapMarker) {
        mapMarker.remove();
        mapMarker = null;
    }

    document.querySelectorAll('.asteroid-card').forEach(card => {
        card.classList.remove('selected');
    });
}
