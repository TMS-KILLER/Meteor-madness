// ===================================
// MOBILE ADAPTATION - Enhanced Version
// Touch events and optimization for mobile devices
// ===================================

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
function isMobileDevice() {
    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||
           (navigator.maxTouchPoints && navigator.maxTouchPoints > 2);
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
function getScreenSize() {
    const width = window.innerWidth;
    if (width < 360) return 'xxs'; // Very small phones
    if (width < 480) return 'xs';  // Small phones
    if (width < 768) return 'sm';  // Large phones
    if (width < 1024) return 'md'; // Tablets
    return 'lg'; // Desktop
}

// –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
function getDeviceType() {
    const ua = navigator.userAgent;
    if (/(tablet|ipad|playbook|silk)|(android(?!.*mobi))/i.test(ua)) {
        return 'tablet';
    }
    if (/Mobile|Android|iP(hone|od)|IEMobile|BlackBerry|Kindle|Silk-Accelerated|(hpw|web)OS|Opera M(obi|ini)/.test(ua)) {
        return 'mobile';
    }
    return 'desktop';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
function initMobile() {
    const isMobile = isMobileDevice();
    const deviceType = getDeviceType();
    const screenSize = getScreenSize();
    const isLandscape = window.innerWidth > window.innerHeight;
    
    console.log(`üì± Device: ${deviceType} (${isMobile ? 'Mobile' : 'Desktop'}), Screen: ${screenSize}, Orientation: ${isLandscape ? 'Landscape' : 'Portrait'}`);
    
    if (isMobile) {
        document.body.classList.add('mobile-device', `device-${deviceType}`, `screen-${screenSize}`);
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞—é—â–µ–π—Å—è –ø–∞–Ω–µ–ª–∏
        setupPanelToggle();
        
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥–≤–æ–π–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –¥–ª—è zoom –Ω–∞ iOS
        let lastTouchEnd = 0;
        document.addEventListener('touchend', function(event) {
            const now = Date.now();
            if (now - lastTouchEnd <= 300) {
                event.preventDefault();
            }
            lastTouchEnd = now;
        }, false);
        
        // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º pull-to-refresh –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        let startY = 0;
        document.body.addEventListener('touchstart', function(e) {
            startY = e.touches[0].pageY;
        }, { passive: true });
        
        document.body.addEventListener('touchmove', function(e) {
            const y = e.touches[0].pageY;
            // –†–∞–∑—Ä–µ—à–∞–µ–º —Å–∫—Ä–æ–ª–ª —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ –ø–∞–Ω–µ–ª–∏
            if (e.target.closest('#left-panel')) {
                return;
            }
            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º pull-to-refresh
            if (y > startY && window.pageYOffset === 0) {
                e.preventDefault();
            }
        }, { passive: false });
        
        // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
        optimizeForMobile();
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
        showWelcomeHint();
    }
    
    // –ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
    window.addEventListener('orientationchange', handleOrientationChange);
    window.addEventListener('resize', debounce(handleResize, 250));
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–≤–æ—Ä–∞—á–∏–≤–∞—é—â–µ–π—Å—è –ø–∞–Ω–µ–ª–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
function setupPanelToggle() {
    const panelToggle = document.getElementById('panel-toggle');
    const uiContainer = document.getElementById('ui-container');
    
    if (!panelToggle || !uiContainer) {
        console.warn('‚ö†Ô∏è Panel toggle elements not found');
        return;
    }
    
    console.log('üéõÔ∏è Setting up panel toggle...');
    
    // –ù–∞—á–∏–Ω–∞–µ–º —Å–æ —Å–≤–µ—Ä–Ω—É—Ç–æ–π –ø–∞–Ω–µ–ª–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
    const isMobile = isMobileDevice();
    const isLandscape = window.innerWidth > window.innerHeight;
    
    if (isMobile) {
        // –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –≤—Å–µ–≥–¥–∞ –Ω–∞—á–∏–Ω–∞–µ–º —Å–≤—ë—Ä–Ω—É—Ç—ã–º–∏
        uiContainer.classList.remove('expanded');
    }
    
    // –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–∞–Ω–µ–ª–∏
    function togglePanel() {
        const isExpanded = uiContainer.classList.toggle('expanded');
        
        if (isExpanded) {
            panelToggle.setAttribute('aria-label', '–°–≤–∞–π–ø –≤–Ω–∏–∑ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è');
            vibrate(15);
            console.log('üìñ Panel expanded');
            
            // –ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –Ω–∞–≤–µ—Ä—Ö –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏
            const leftPanel = document.getElementById('left-panel');
            if (leftPanel) {
                leftPanel.scrollTo({ top: 0, behavior: 'smooth' });
            }
        } else {
            panelToggle.setAttribute('aria-label', '–°–≤–∞–π–ø –≤–≤–µ—Ä—Ö –¥–ª—è –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è');
            vibrate(10);
            console.log('üìï Panel collapsed');
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã canvas –∏ –∫–∞—Ä—Ç –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
            handleResize();
        }, 350);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    panelToggle.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        togglePanel();
    });
    
    // NASA Eyes Style - –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å–≤–∞–π–ø –∂–µ—Å—Ç—ã
    let touchStartY = 0;
    let touchEndY = 0;
    let touchStartX = 0;
    let isDragging = false;
    const SWIPE_THRESHOLD = 50; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è —Å–≤–∞–π–ø–∞
    
    uiContainer.addEventListener('touchstart', function(e) {
        touchStartY = e.touches[0].clientY;
        touchStartX = e.touches[0].clientX;
        isDragging = true;
    }, { passive: true });
    
    uiContainer.addEventListener('touchmove', function(e) {
        if (!isDragging) return;
        touchEndY = e.touches[0].clientY;
        
        // –í–∏–∑—É–∞–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø—Ä–∏ —Å–≤–∞–π–ø–µ
        const diff = touchStartY - touchEndY;
        if (Math.abs(diff) > 10 && !uiContainer.classList.contains('expanded')) {
            uiContainer.style.transform = `translateY(calc(100% - ${Math.max(0, -diff)}px))`;
        }
    }, { passive: true });
    
    uiContainer.addEventListener('touchend', function(e) {
        if (!isDragging) return;
        isDragging = false;
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º
        uiContainer.style.transform = '';
        
        const swipeDistance = touchStartY - touchEndY;
        const horizontalDistance = Math.abs(e.changedTouches[0].clientX - touchStartX);
        
        // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è
        if (horizontalDistance > 30) return;
        
        // –°–≤–∞–π–ø –≤–≤–µ—Ä—Ö (–æ—Ç–∫—Ä—ã—Ç—å)
        if (swipeDistance > SWIPE_THRESHOLD) {
            if (!uiContainer.classList.contains('expanded')) {
                togglePanel();
            }
        }
        // –°–≤–∞–π–ø –≤–Ω–∏–∑ (–∑–∞–∫—Ä—ã—Ç—å)
        else if (swipeDistance < -SWIPE_THRESHOLD) {
            if (uiContainer.classList.contains('expanded')) {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–∞–Ω–µ–ª—å –ø—Ä–æ–∫—Ä—É—á–µ–Ω–∞ –Ω–∞–≤–µ—Ä—Ö
                const leftPanel = document.getElementById('left-panel');
                if (leftPanel && leftPanel.scrollTop < 10) {
                    togglePanel();
                }
            }
        }
    }, { passive: true });
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ canvas (—Ç–æ–ª—å–∫–æ portrait mobile)
    const canvasContainer = document.getElementById('canvas-container');
    if (canvasContainer && isMobile) {
        let tapTimeout = null;
        
        canvasContainer.addEventListener('click', function(e) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª–∏–∫ –Ω–µ –Ω–∞ UI —ç–ª–µ–º–µ–Ω—Ç–∞—Ö
            if (e.target.closest('#ui-container')) return;
            
            const isPortrait = window.innerHeight > window.innerWidth;
            
            if (isPortrait && uiContainer.classList.contains('expanded')) {
                clearTimeout(tapTimeout);
                tapTimeout = setTimeout(() => {
                    uiContainer.classList.remove('expanded');
                    panelToggle.setAttribute('aria-label', '–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ø–∞–Ω–µ–ª—å');
                    vibrate(10);
                    console.log('üìï Panel auto-collapsed (tap on canvas)');
                }, 100);
            }
        });
    }
    
    console.log('‚úÖ Panel toggle configured');
}

// –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
function optimizeForMobile() {
    console.log('‚ö° Optimizing for mobile...');
    
    const screenSize = getScreenSize();
    const deviceType = getDeviceType();
    
    // –£–º–µ–Ω—å—à–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –Ω–∞ —Å–ª–∞–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    if (renderer) {
        const pixelRatio = deviceType === 'mobile' && screenSize === 'xxs' ? 1 : Math.min(window.devicePixelRatio, 2);
        renderer.setPixelRatio(pixelRatio);
        console.log('  ‚Ä¢ Pixel ratio set to:', pixelRatio);
    }
    
    // –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–∞—Å—Ç–∏—Ü –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
    if (screenSize === 'xxs' || screenSize === 'xs') {
        window.MOBILE_PARTICLE_REDUCTION = 0.3; // 30% –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ
    } else if (screenSize === 'sm') {
        window.MOBILE_PARTICLE_REDUCTION = 0.5; // 50% –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ
    } else {
        window.MOBILE_PARTICLE_REDUCTION = 0.7; // 70% –æ—Ç –æ–±—ã—á–Ω–æ–≥–æ
    }
    console.log('  ‚Ä¢ Particle reduction:', window.MOBILE_PARTICLE_REDUCTION);
    
    // –û—Ç–∫–ª—é—á–∞–µ–º —Ç–µ–Ω–∏ –Ω–∞ —Å–ª–∞–±—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
    const isLowEnd = screenSize === 'xxs' || screenSize === 'xs';
    if (isLowEnd && renderer) {
        renderer.shadowMap.enabled = false;
        console.log('  ‚Ä¢ Shadows disabled for performance');
    }
    
    // –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∞–Ω—Ç–∏–∞–ª–∏–∞—Å–∏–Ω–≥–∞
    if (renderer && isLowEnd) {
        renderer.antialias = false;
        console.log('  ‚Ä¢ Antialiasing disabled for performance');
    }
    
    console.log('‚úÖ Mobile optimization complete');
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
function handleOrientationChange() {
    setTimeout(() => {
        const orientation = window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';
        const screenSize = getScreenSize();
        console.log(`üîÑ Orientation changed to: ${orientation} (${screenSize})`);
        
        // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–∞–∑–º–µ—Ä—ã —á–µ—Ä–µ–∑ handleResize
        handleResize();
        
        // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º UI –ø–æ–¥ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—é
        const uiContainer = document.getElementById('ui-container');
        const panelToggle = document.getElementById('panel-toggle');
        
        if (uiContainer && panelToggle && isMobileDevice()) {
            // –í landscape –Ω–∞ –º–∞–ª–µ–Ω—å–∫–∏—Ö —ç–∫—Ä–∞–Ω–∞—Ö –ª—É—á—à–µ –∑–∞–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å
            if (orientation === 'landscape' && screenSize !== 'md' && screenSize !== 'lg') {
                uiContainer.classList.remove('expanded');
            }
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
        if (screenSize === 'xxs' || screenSize === 'xs' || screenSize === 'sm') {
            showOrientationHint(orientation);
        }
    }, 300);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞
function handleResize() {
    if (!window.camera || !window.renderer) return;
    
    const container = document.getElementById('canvas-container');
    if (!container) return;
    
    const width = container.clientWidth;
    const height = container.clientHeight;
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–º–µ—Ä—É
    window.camera.aspect = width / height;
    window.camera.updateProjectionMatrix();
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ–Ω–¥–µ—Ä–µ—Ä
    window.renderer.setSize(width, height);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞—Ä—Ç—ã
    setTimeout(() => {
        if (window.map) {
            window.map.invalidateSize();
        }
        if (window.mapFullscreen) {
            window.mapFullscreen.invalidateSize();
        }
    }, 100);
    
    console.log(`üìê Resized: ${width}x${height}`);
}

// –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞
function showOrientationHint(orientation) {
    const screenSize = getScreenSize();
    
    if (screenSize === 'xxs' || screenSize === 'xs' || screenSize === 'sm') {
        // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É
        const oldHint = document.getElementById('orientation-hint');
        if (oldHint) oldHint.remove();
        
        const hint = document.createElement('div');
        hint.id = 'orientation-hint';
        hint.style.cssText = `
            position: fixed;
            bottom: 80px;
            left: 50%;
            transform: translateX(-50%);
            background: linear-gradient(135deg, rgba(255, 107, 53, 0.95), rgba(255, 69, 0, 0.95));
            color: white;
            padding: 12px 24px;
            border-radius: 24px;
            font-size: 14px;
            font-weight: 600;
            z-index: 10000;
            animation: fadeInOut 3.5s ease;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.3);
            max-width: 80%;
            text-align: center;
        `;
        
        if (orientation === 'portrait') {
            hint.innerHTML = 'ÔøΩ –ü–æ–≤–µ—Ä–Ω–∏—Ç–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ<br>–¥–ª—è –ª—É—á—à–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞';
        } else {
            hint.innerHTML = '‚úì –õ–∞–Ω–¥—à–∞—Ñ—Ç–Ω—ã–π —Ä–µ–∂–∏–º - –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ!';
        }
        
        document.body.appendChild(hint);
        
        setTimeout(() => {
            hint.style.opacity = '0';
            hint.style.transform = 'translateX(-50%) translateY(-20px)';
            setTimeout(() => hint.remove(), 1000);
        }, 2500);
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º CSS –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
const style = document.createElement('style');
style.textContent = `
    @keyframes fadeInOut {
        0% { opacity: 0; transform: translateX(-50%) translateY(20px); }
        20% { opacity: 1; transform: translateX(-50%) translateY(0); }
        80% { opacity: 1; transform: translateX(-50%) translateY(0); }
        100% { opacity: 0; transform: translateX(-50%) translateY(-20px); }
    }
    
    .mobile-device .btn-primary,
    .mobile-device .btn-secondary,
    .mobile-device .btn-visualization {
        -webkit-tap-highlight-color: rgba(255, 107, 53, 0.3);
        touch-action: manipulation;
    }
    
    .mobile-device #canvas-container {
        touch-action: pan-x pan-y;
    }
`;
document.head.appendChild(style);

// Touch-friendly controls –¥–ª—è OrbitControls
function enhanceTouchControls() {
    if (controls && isMobileDevice()) {
        const screenSize = getScreenSize();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –¥–ª—è touch
        controls.enableDamping = true;
        controls.dampingFactor = 0.08;
        
        // –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
        if (screenSize === 'xxs' || screenSize === 'xs') {
            controls.rotateSpeed = 0.4;
            controls.zoomSpeed = 1.0;
            controls.panSpeed = 0.6;
        } else {
            controls.rotateSpeed = 0.5;
            controls.zoomSpeed = 1.2;
            controls.panSpeed = 0.8;
        }
        
        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
        controls.minDistance = 15;
        controls.maxDistance = 100;
        controls.enablePan = false; // –û—Ç–∫–ª—é—á–∞–µ–º pan –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è
        
        // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–≥–æ –≤—Ä–∞—â–µ–Ω–∏—è
        controls.minPolarAngle = Math.PI / 6; // 30 –≥—Ä–∞–¥—É—Å–æ–≤ –æ—Ç –≤–µ—Ä—Ö–∞
        controls.maxPolarAngle = Math.PI * 0.75; // 135 –≥—Ä–∞–¥—É—Å–æ–≤
        
        console.log('‚úÖ Touch controls enhanced for', screenSize);
    }
}

// –£–ª—É—á—à–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
function enhanceMobileUI() {
    const screenSize = getScreenSize();
    
    if (screenSize === 'xxs' || screenSize === 'xs' || screenSize === 'sm') {
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–Ω–∞–≤–µ—Ä—Ö" –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –ø–∞–Ω–µ–ª–µ–π
        const backToTop = document.createElement('button');
        backToTop.id = 'back-to-top';
        backToTop.innerHTML = '‚Üë';
        backToTop.style.cssText = `
            position: fixed;
            bottom: 90px;
            right: 20px;
            width: 54px;
            height: 54px;
            border-radius: 27px;
            background: linear-gradient(135deg, rgba(255, 107, 53, 0.95), rgba(255, 69, 0, 0.95));
            border: 2px solid rgba(255, 255, 255, 0.3);
            color: white;
            font-size: 26px;
            font-weight: bold;
            cursor: pointer;
            z-index: 1000;
            display: none;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.4);
            touch-action: manipulation;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        `;
        
        document.body.appendChild(backToTop);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ
        const leftPanel = document.getElementById('left-panel');
        if (leftPanel) {
            leftPanel.addEventListener('scroll', () => {
                const uiContainer = document.getElementById('ui-container');
                if (leftPanel.scrollTop > 150 && uiContainer.classList.contains('expanded')) {
                    backToTop.style.display = 'flex';
                    backToTop.style.alignItems = 'center';
                    backToTop.style.justifyContent = 'center';
                } else {
                    backToTop.style.display = 'none';
                }
            });
            
            backToTop.addEventListener('click', () => {
                leftPanel.scrollTo({ top: 0, behavior: 'smooth' });
                vibrate(15);
            });
        }
    }
    
    console.log('‚úÖ Mobile UI enhancements applied');
}

// –í–∏–±—Ä–æ–æ—Ç–∫–ª–∏–∫ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö (–µ—Å–ª–∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è)
function vibrate(duration = 10) {
    if ('vibrate' in navigator && isMobileDevice()) {
        try {
            navigator.vibrate(duration);
        } catch (e) {
            // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –≤–∏–±—Ä–∞—Ü–∏–∏
        }
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º –≤–∏–±—Ä–æ–æ—Ç–∫–ª–∏–∫ –∫ –≤–∞–∂–Ω—ã–º –¥–µ–π—Å—Ç–≤–∏—è–º
function addVibrationFeedback() {
    if (!isMobileDevice()) return;
    
    // –ü—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–∏–º—É–ª—è—Ü–∏–∏
    const startBtn = document.getElementById('start-simulation');
    if (startBtn) {
        startBtn.addEventListener('click', () => {
            vibrate([25, 40, 25]); // –ü–∞—Ç—Ç–µ—Ä–Ω –≤–∏–±—Ä–∞—Ü–∏–∏
        });
    }
    
    // –ü—Ä–∏ —Å–±—Ä–æ—Å–µ
    const resetBtn = document.getElementById('reset-simulation');
    if (resetBtn) {
        resetBtn.addEventListener('click', () => {
            vibrate(20);
        });
    }
    
    // –ü—Ä–∏ –≤—ã–±–æ—Ä–µ –∞—Å—Ç–µ—Ä–æ–∏–¥–∞
    const asteroidSelect = document.getElementById('asteroid-select');
    if (asteroidSelect) {
        asteroidSelect.addEventListener('change', () => {
            vibrate(12);
        });
    }
    
    // –ü—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
    const setCoordBtn = document.getElementById('set-coordinates');
    if (setCoordBtn) {
        setCoordBtn.addEventListener('click', () => {
            vibrate(15);
        });
    }
    
    console.log('‚úÖ Vibration feedback configured');
}

// Debounce —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
        const later = () => {
            clearTimeout(timeout);
            func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
    };
}

// –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
function showWelcomeHint() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–∫–∞–∑—ã–≤–∞–ª–∏ –ª–∏ —É–∂–µ –ø–æ–¥—Å–∫–∞–∑–∫—É
    if (localStorage.getItem('welcomeShown')) return;
    
    setTimeout(() => {
        const hint = document.createElement('div');
        hint.style.cssText = `position: fixed; bottom: 100px; left: 50%; transform: translateX(-50%); background: linear-gradient(135deg, rgba(255, 107, 53, 0.95), rgba(255, 69, 0, 0.95)); color: white; padding: 16px 28px; border-radius: 28px; font-size: 15px; font-weight: 600; z-index: 10001; animation: fadeInOut 4s ease; box-shadow: 0 6px 24px rgba(0,0,0,0.5); backdrop-filter: blur(10px); border: 2px solid rgba(255,255,255,0.3); max-width: 85%; text-align: center; line-height: 1.4;`;
        hint.innerHTML = 'üëÜ Tap the arrow below<br>to open the control panel';
        document.body.appendChild(hint);
        setTimeout(() => { hint.style.opacity = '0'; hint.style.transform = 'translateX(-50%) translateY(-20px)'; setTimeout(() => hint.remove(), 1000); }, 3000);
        localStorage.setItem('welcomeShown', 'true');
    }, 1500);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener('DOMContentLoaded', () => {
    console.log('üöÄ Initializing mobile adaptations...');
    initMobile();
    
    // –ñ–¥–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Three.js –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    setTimeout(() => {
        enhanceTouchControls();
        enhanceMobileUI();
        addVibrationFeedback();
        console.log('‚úÖ All mobile features initialized');
    }, 1000);
});

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.isMobileDevice = isMobileDevice;
window.getScreenSize = getScreenSize;
window.getDeviceType = getDeviceType;
window.vibrate = vibrate;
window.handleResize = handleResize;

console.log('üì± Mobile module loaded successfully');
